// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var DynamicRequire = require("./dynamicRequire");

function dynReq(prim) {
  return DynamicRequire.default(prim);
}

function loadModule(path) {
  return DynamicRequire.default(path).default;
}

function projectConfig(projectSlug, configPath) {
  var path = Belt_Option.getWithDefault(configPath, process.env.HOME + "/.branch-name");
  var config = DynamicRequire.default(path).default;
  var projects = $$Array.to_list(config.projects);
  try {
    return {
            TAG: /* Ok */0,
            _0: List.find((function (p) {
                    return p.slug === projectSlug;
                  }), projects)
          };
  }
  catch (exn){
    return {
            TAG: /* Error */1,
            _0: "unknown project " + projectSlug
          };
  }
}

function server(projectConfig) {
  var match = projectConfig.server;
  switch (match) {
    case "clubhouse" :
        var token = projectConfig.serverConfig.token;
        if (token !== undefined) {
          return {
                  TAG: /* Ok */0,
                  _0: {
                    TAG: /* Clubhouse */0,
                    _0: token
                  }
                };
        } else {
          return {
                  TAG: /* Error */1,
                  _0: "server config missing token value"
                };
        }
    case "gitlab" :
        var match$1 = projectConfig.serverConfig;
        var projectId = match$1.projectId;
        var token$1 = match$1.token;
        var host = match$1.host;
        if (host !== undefined) {
          if (token$1 !== undefined) {
            if (projectId !== undefined) {
              return {
                      TAG: /* Ok */0,
                      _0: {
                        TAG: /* Gitlab */2,
                        _0: host,
                        _1: token$1,
                        _2: projectId
                      }
                    };
            } else {
              return {
                      TAG: /* Error */1,
                      _0: "server config missing projectId value"
                    };
            }
          } else if (projectId !== undefined) {
            return {
                    TAG: /* Error */1,
                    _0: "server config missing token value"
                  };
          } else {
            return {
                    TAG: /* Error */1,
                    _0: "server config missing token and projectId values"
                  };
          }
        } else if (token$1 !== undefined) {
          if (projectId !== undefined) {
            return {
                    TAG: /* Error */1,
                    _0: "server config missing host value"
                  };
          } else {
            return {
                    TAG: /* Error */1,
                    _0: "server config missing host and projectId values"
                  };
          }
        } else if (projectId !== undefined) {
          return {
                  TAG: /* Error */1,
                  _0: "server config missing host and projectId values"
                };
        } else {
          return {
                  TAG: /* Error */1,
                  _0: "server config missing host, token and projectId values"
                };
        }
    case "jira" :
        var match$2 = projectConfig.serverConfig;
        var token$2 = match$2.token;
        var username = match$2.username;
        var host$1 = match$2.host;
        if (host$1 !== undefined) {
          if (username !== undefined) {
            if (token$2 !== undefined) {
              return {
                      TAG: /* Ok */0,
                      _0: {
                        TAG: /* Jira */1,
                        _0: host$1,
                        _1: username,
                        _2: token$2
                      }
                    };
            } else {
              return {
                      TAG: /* Error */1,
                      _0: "server config missing token value"
                    };
            }
          } else if (token$2 !== undefined) {
            return {
                    TAG: /* Error */1,
                    _0: "server config missing username value"
                  };
          } else {
            return {
                    TAG: /* Error */1,
                    _0: "server config missing username and token values"
                  };
          }
        } else if (username !== undefined) {
          if (token$2 !== undefined) {
            return {
                    TAG: /* Error */1,
                    _0: "server config missing host value"
                  };
          } else {
            return {
                    TAG: /* Error */1,
                    _0: "server config missing host and token values"
                  };
          }
        } else if (token$2 !== undefined) {
          return {
                  TAG: /* Error */1,
                  _0: "server config missing host and token values"
                };
        } else {
          return {
                  TAG: /* Error */1,
                  _0: "server config missing host, username and token values"
                };
        }
    default:
      return {
              TAG: /* Error */1,
              _0: "unsupported server type"
            };
  }
}

exports.dynReq = dynReq;
exports.loadModule = loadModule;
exports.projectConfig = projectConfig;
exports.server = server;
/* ./dynamicRequire Not a pure module */
